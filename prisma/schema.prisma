generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Visibility {
  PUBLIC
  PRIVATE
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String
  password      String
  itineraries   Itinerary[]
  budgets       Budget[]
  reviews       Review[]
  collaborators Collaborator[]
  savedItineraries  SavedItinerary[] @relation(name: "UserSavedItineraries") 

}

model Itinerary {
  id              String   @id @default(uuid())
  title           String
  destination     String
  duration        Int
  tripType        String  
  budget          String  
  transport       String  
  accommodation   String  
  interests       String  
  startDate       DateTime
  endDate         DateTime
  itineraryData   Json     
  visibility      Visibility @default(PRIVATE) 
  userId          String
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  collaborators   Collaborator[]  
  savedByUsers    SavedItinerary[] @relation(name: "ItinerarySavedByUsers")  
  reviews        Review[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model SavedItinerary {
  id          String   @id @default(uuid())
  userId      String
  itineraryId String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserSavedItineraries")
  itinerary   Itinerary @relation(fields: [itineraryId], references: [id], onDelete: Cascade, name: "ItinerarySavedByUsers")
  createdAt   DateTime  @default(now())
}


model Collaborator {
  id          String   @id @default(uuid())
  itineraryId String
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  itinerary   Itinerary  @relation(fields: [itineraryId], references: [id], onDelete: Cascade)
}

model Review {
  id          String   @id @default(uuid())
  itineraryId String
  userId      String
  rating      Int
  comment     String
  createdAt   DateTime @default(now())

  itinerary   Itinerary @relation(fields: [itineraryId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Budget {
  id        String  @id @default(uuid())
  userId    String
  amount    Float
  currency  String
  expenses  Expense[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Expense {
  id        String  @id @default(uuid())
  budgetId  String
  category  String
  amount    Float
  currency  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  budget    Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)
}
